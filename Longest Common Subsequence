//https://leetcode.com/problems/longest-common-subsequence/


class Solution {
public:
    int longestCommonSubsequence(string s, string t) {
        
        
        int n = s.length() ; 
        int m = t.length() ; 
        
        int dp [ n ] [ m ] ; 
        memset ( dp , 0 , sizeof ( dp ) ) ; 
        for ( int i = 0 ; i < n ; i ++ )
        {
                for ( int j =0 ; j < m ; j ++ )
                {
                    if ( s [ i ] == t [ j ]   )
                    {
                        if ( i - 1 >= 0 and j - 1 >= 0)
                             dp [ i ] [ j ] = 1 + dp [ i - 1 ] [ j - 1 ] ;
                        else 
                              dp [ i ] [ j ] = 1 ;
                        
                    }
                    else 
                    {
                              if ( j - 1 >= 0  )
                                    dp [ i ] [ j ] = dp [ i ] [ j - 1 ] ; 
                             if ( i - 1 >= 0 )
                                    dp [ i ] [ j ] = max ( dp [ i ] [ j ] , dp [ i - 1 ] [ j ] ) ; 
                    }
                }
        }
        return dp [ n - 1 ] [ m- 1 ] ; 
    }
}; 
