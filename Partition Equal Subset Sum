//https://leetcode.com/problems/partition-equal-subset-sum/



class Solution {
public:
    bool canPartition(vector<int>& arr) {
        
        
        
        int n = arr.size() ; 
        int sum = 0 ;
        for ( int i = 0 ; i < n ; i ++ )
                sum += arr [ i ] ; 
        
        if ( sum % 2  )
                return 0 ;
        sum = sum / 2 ; 
        int dp [ n + 1 ] [ sum + 1 ] ;
        
        memset ( dp , 0 , sizeof ( dp )) ; 
      
        for ( int i = 0 ; i <= n ; i ++ )
                dp [ i ] [ 0 ] = 1 ; 
        
        for ( int i = 1 ; i <= n ; i ++ )
        {
            for ( int j = 1 ; j <= sum ; j ++ )
            {
                dp [ i ] [ j ]  = dp [ i - 1 ] [ j ] ; 
                if ( j - arr [ i - 1 ]  >= 0 and dp [ i - 1 ] [ j - arr [ i - 1 ] ] )
                        dp [ i ][ j ] = 1  ;  
            }
        }
        
         
     
        return dp [ n ] [ sum ] ; 
        
    }
};
