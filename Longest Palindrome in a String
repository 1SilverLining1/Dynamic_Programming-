//https://practice.geeksforgeeks.org/problems/longest-palindrome-in-a-string/0


#include <bits/stdc++.h>
using namespace std;
typedef long long ll ; 
int main() {
	
	ll t ; 
	cin >> t ; 
	while ( t-- )
	{
    	string s , ans ; 
    	cin >> s ; 
    	ll n = s.length() , maxi = 1 ; 
    	ll dp [ n ] [ n ]  ; 
    	for ( ll i = 0 ; i < n ; i++ )
    	{
    		for ( ll j = 0 ; j < n ; j ++ )
    			dp [ i ] [ j ] = 0 ; 
    	}
        ans += s [ 0 ] ; 
    	for ( ll i = 0 ; i < n ; i ++)
    		dp [ i ] [ i ] =  1 ; 
    	for (int i = 0 ; i + 1 < n ; i ++ )
    	{
    	    if ( s [ i ] == s [ i + 1 ]  )
    	    {
    	        dp [ i ] [ i + 1 ] = 1  ; 
    	        
    	    }
    	    
    	    if ( dp [ i ] [ i + 1 ] and maxi == 1 )
    	    {
    	        maxi = 2 ; 
    	        ans = s.substr ( i , 2 ) ;
    	    }
    	}
    	for ( int i = 2 ; i < n ; i ++ )
    	{
    	    int row = 0 , col = i ; 
    	    while ( row < n and col < n )
    	    {
    	       
    	        if ( s [ row ] == s [ col ] and dp [ row + 1 ] [ col - 1 ] )
    	            dp [ row ] [ col ] = 1 ; 
                //cout << row << " " << col << " " << dp [ row ] [ col ] << endl ;  

    	        if ( dp [ row ] [ col ] and col - row + 1  > maxi )
    	        {
    	            maxi = col - row + 1 ; 
    	            ans  = s.substr ( row , maxi ) ; 
    	        }
    	        
    	        row ++ , col ++ ; 
    	        
    	    }
    	}
        cout << ans << endl ;  
	}
	// your code goes here
	return 0;
}
